// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  CANDIDATE
  ADMIN
}

model User {
  id            String        @id @default(uuid())
  nim           String        @unique
  email_itb     String        @unique
  email_non_itb String
  long_name     String
  short_name    String
  fakultas      String
  role          Role          @default(USER)
  candidate     Candidate?
  Challenge     Challenge[]
  Pelanggaran   Pelanggaran[]
  Vote          Vote[]
}

model Candidate {
  id         String @id @default(uuid())
  account    User   @relation(fields: [account_id], references: [id])
  account_id String @unique

  Challenge   Challenge[]
  Pelanggaran Pelanggaran[]
  Vote        Vote[]
}

enum Progress {
  SENT
  ACCEPTED_MASTER
  ACCEPTED_CANDIDATE
  REJECTED
}

model Challenge {
  id               String           @id @default(uuid())
  sender           User             @relation(fields: [sender_id], references: [id])
  sender_id        String
  candidate        Candidate        @relation(fields: [candidate_id], references: [id])
  candidate_id     String
  payload          String
  progress         Progress         @default(SENT)
  created_at       DateTime         @default(now())
  challenge_answer ChallengeAnswer?
}

model ChallengeAnswer {
  id           String    @id @default(uuid())
  challenge    Challenge @relation(fields: [challenge_id], references: [id])
  challenge_id String    @unique
  answer       String
  created_at   DateTime  @default(now())
}

model Pelanggaran {
  id           String    @id @default(uuid())
  sender       User      @relation(fields: [sender_id], references: [id])
  sender_id    String
  candidate    Candidate @relation(fields: [candidate_id], references: [id])
  candidate_id String
  keterangan   String
  bukti_url    String
  created_at   DateTime  @default(now())
}

model Vote {
  id           String    @id @default(uuid())
  voter        User      @relation(fields: [voter_id], references: [id])
  voter_id     String    @unique
  candidate    Candidate @relation(fields: [candidate_id], references: [id])
  candidate_id String
  created_at   DateTime  @default(now())
}

enum ProgressBerkas {
  BELUM_MENGAMBIL
  SUDAH_MENGAMBIL
  SUDAH_MENGUMPULKAN
}

model BerkasCandidate {
  id             String           @id @default(uuid())
  nim            String
  password       String
  progress       ProgressBerkas   @default(BELUM_MENGAMBIL)
  BerkasUploaded BerkasUploaded[]
}

model BerkasUploaded {
  id                  String          @id @default(uuid())
  berkas              Berkas          @relation(fields: [berkas_id], references: [id])
  berkas_id           Int
  berkas_candidate    BerkasCandidate @relation(fields: [berkas_candidate_id], references: [id])
  berkas_candidate_id String
  file_url            String
}

enum JenisBerkas {
  ALL
  MWAWM
  K3M
}

model Berkas {
  id             Int              @id @default(autoincrement())
  nama           String
  jenis_berkas   JenisBerkas      @default(ALL)
  BerkasUploaded BerkasUploaded[]
}

model BerkasAdmin {
  id       String @id @default(uuid())
  nim      String
  password String
}
